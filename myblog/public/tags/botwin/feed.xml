<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Botwin on </title>
    <link>/tags/botwin/</link>
    <description>Recent content in Botwin on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 10 Apr 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/botwin/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Announcing Carter</title>
      <link>/2018-04-10-announcing-carter/</link>
      <pubDate>Tue, 10 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018-04-10-announcing-carter/</guid>
      <description>As of beginning of April 2018 Botwin has been renamed to Carter. Whilst I thought the name was genius it became obvious that some people didn&amp;rsquo;t like it or understand it and tried to interpret it as a Bot framework for Windows. After spending too long trying to think of a new name I finally decided upon Carter. Carter comes from the surname of Jay-Z (Shawn Carter) and in his song Empire State of Mind he sings &amp;ldquo;I&amp;rsquo;m the new Sinatra&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Announcing Botwin</title>
      <link>/2017-05-04-announcing-botwin/</link>
      <pubDate>Thu, 04 May 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017-05-04-announcing-botwin/</guid>
      <description>&lt;p&gt;Whilst keeping my eye on what&amp;rsquo;s going on in .NET Core v2 I came across some planned changes for ASP.NET Core regarding the &lt;a href=&#34;https://github.com/aspnet/Routing/blob/dev/src/Microsoft.AspNetCore.Routing/RequestDelegateRouteBuilderExtensions.cs&#34;&gt;routing&lt;/a&gt;.  I had also read this &lt;a href=&#34;https://www.strathweb.com/2017/01/building-microservices-with-asp-net-core-without-mvc/&#34;&gt;blog post&lt;/a&gt; from &lt;a href=&#34;https://twitter.com/filip_woj&#34;&gt;Filip&lt;/a&gt; about using the planned changes for microservices and a lightbulb went off in my head.  I thought to myself I wonder if I could adapt the new extensions to create Nancy-esque routing.  Turns out, I could!&lt;/p&gt;
&lt;h3 id=&#34;sample&#34;&gt;Sample&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;public class ActorsModule : BotwinModule
{
    public ActorsModule()
    {
        this.Get(&amp;quot;/&amp;quot;, async (req, res, routeData) =&amp;gt;
        {
            await res.WriteAsync(&amp;quot;Hello World!&amp;quot;);
        });
    }
}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>