<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>coreclr on </title>
    <link>/tags/coreclr/</link>
    <description>Recent content in coreclr on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 30 Mar 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/coreclr/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>VQ Communications Funds NancyFX to run on CoreCLR</title>
      <link>/2016-03-30-vq-communications-funds-coreclr-nancyfx/</link>
      <pubDate>Wed, 30 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016-03-30-vq-communications-funds-coreclr-nancyfx/</guid>
      <description>&lt;p&gt;Nearly 2 years ago I was employed by &lt;a href=&#34;http://www.vqcomms.com&#34;&gt;VQ Communications&lt;/a&gt; primarily because of my open source contributions to &lt;a href=&#34;http://nancyfx.org&#34;&gt;NancyFX&lt;/a&gt;.  They had started work on a v2 of their flagship product and had begun work with Nancy and needed someone to help drive a HTTP API and architect a scaling solution as their v2 product was addressing a requirement they had for it cope with large volumes of traffic.  Also of interest to me was their aim to deliver all of this as a black box appliance to customers on a VM running a custom embedded version of Linux using Postgres as the database.  I would work four days a week remotely and go into the office one day a week.  They already had completely remote employees and since I have been there they have taken on more. There are lots more juicy technical examples in the stack I could go into however, this is not the point of this post.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Profiling a CoreCLR application with dotMemory</title>
      <link>/2016-02-11-profiling-coreclr-application/</link>
      <pubDate>Thu, 11 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016-02-11-profiling-coreclr-application/</guid>
      <description>&lt;p&gt;I had ported an application over to CoreCLR (that&amp;rsquo;s a whole other blog post), along with my colleague &lt;a href=&#34;http://twitter.com/yantrio&#34;&gt;James Humphries&lt;/a&gt; put it in a docker image and sat back and watched it do its thing.  After 6 hours of running the docker container had crashed.  Ah nuts we thought,  so pulled up the logs from docker and the last line looked like this &lt;code&gt;2016-02-10T20:18:31.728783069Z Killed&lt;/code&gt;.  I&amp;rsquo;m pretty sure when you have a log entry with &lt;code&gt;Killed&lt;/code&gt; in it, things can&amp;rsquo;t be good. To the interweb&amp;hellip;&lt;/p&gt;
&lt;p&gt;I opened up the CoreFX repository on Github to search for the term &lt;code&gt;Killed&lt;/code&gt; and there were 2 comments but nothing that was logged out anywhere.  I then Googled for docker and killed and there was an entry that someone else had spotted on their container and the feedback was essentially it was probably out of memory.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>